@model IEnumerable<DynamicsLinq.Account>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<div class="navbar-brand">
    Paging
    @Html.ActionLink("<<", "Paging", new { id = 0 })
    @Html.ActionLink("<", "Paging", new { id = ViewBag.previousPageNumber })
    @Html.ActionLink(">", "Paging", new { id = ViewBag.nextPageNumber })
    @Html.ActionLink(">>", "Paging", new { id = ViewBag.lastPage })

    
</div>
<div>
    <h3>Total number of accounts @Html.Action("GetAccountsCount")</h3>
</div>
<table class="table">
    <tr>
        
        <th>@Html.DisplayNameFor(modelItem => modelItem.Name) </th>
        <th>@Html.DisplayNameFor(modelItem => modelItem.CreatedBy) </th>
        <th>@Html.DisplayNameFor(modelItem => modelItem.CreatedOn) </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreatedBy)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreatedOn)
        </td>
        
        <td>
            @Html.ActionLink("Edit", "Edit", new {  id=item.Id}) |
            @Html.ActionLink("Details", "Details", new { id = item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.Id }) |
            
        </td>
    </tr>
}

</table>
